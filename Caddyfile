{
    # Global options
    email admin@skyewire.duckdns.org
    admin off
    # Set log level to INFO to reduce noise
    log {
        level INFO
    }
    # Global TLS configuration with DuckDNS
    tls {
        dns duckdns {env.DUCKDNS_TOKEN}
    }
}

# Common settings for all routes
(common) {
    # Add common headers
    header {
        # Enable CORS
        Access-Control-Allow-Origin *
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Accept, Content-Type, Content-Length, Accept-Encoding, Authorization"
        # Security headers
        X-Frame-Options "SAMEORIGIN"
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"
        # Remove server header
        -Server
    }
    # Enable access logging
    log {
        output stdout
        format console
        level INFO
    }
    # No need for TLS config here as it's defined globally
}

# n8n workflow automation
n8n.skyewire.duckdns.org {
    import common
    reverse_proxy n8n:5678
}

# Open WebUI interface
webui.skyewire.duckdns.org {
    import common
    reverse_proxy open-webui:8080
}

# Flowise
flowise.skyewire.duckdns.org {
    import common
    reverse_proxy flowise:3001
}

# Ollama API endpoints
ollama.skyewire.duckdns.org {
    import common

    @cpu {
        path /v1/*
    }
    @gpu-nvidia {
        path /v1/*
        header Profile "gpu-nvidia"
    }
    @gpu-amd {
        path /v1/*
        header Profile "gpu-amd"
    }

    reverse_proxy @cpu ollama-cpu:11434
    reverse_proxy @gpu-nvidia ollama-gpu:11434
    reverse_proxy @gpu-amd ollama-gpu-amd:11434

    # Default route if no profile header
    reverse_proxy ollama-cpu:11434
}

# Qdrant vector database
qdrant.skyewire.duckdns.org {
    import common
    reverse_proxy qdrant:6333
}

# Supabase storage
storage.skyewire.duckdns.org {
    import common
    reverse_proxy storage:5000
}

# Main domain redirect
skyewire.duckdns.org {
    import common
    redir https://webui.skyewire.duckdns.org{uri}
}
